<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Template.Spike">
<Super>%Persistent</Super>
<TimeCreated>63406,37652.223916</TimeCreated>

<Parameter name="%DefaultNameSpace">
<Default>%SYS</Default>
</Parameter>

<Method name="GetPath">
<ClassMethod>1</ClassMethod>
<FormalSpec>cspapp</FormalSpec>
<Implementation><![CDATA[

  s ns = $namespace, $namespace="%SYS"
  
  k csp s csp = ##class(Security.Applications).Get(cspapp,.csp)
  
  s $namespace=ns 
  Q $g(csp("Path"))
]]></Implementation>
</Method>

<Method name="GetDefault">
<ClassMethod>1</ClassMethod>
<FormalSpec>targetNS:%String=$namespace</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s defapp = $System.CSP.GetDefaultApp(targetNS)
	//w defapp
	Q defapp
	 
	s ns = $namespace, $namespace="%SYS"
	 	
	 	s rs=##class(%ResultSet).%New("Security.Applications:Detail")
	 	s sc=rs.%Execute("") 
	 	
	 	#define g(%name) $g(rs.Data(%name))
	 	s (cspapp,default) = ""
	 	while rs.%Next() {
			
			s default = $$$g("IsNameSpaceDefault") 	
			s cspapp = $$$g("Name")
			s appns = $$$g("NameSpace")
			//if appns'=targetNS continue
			
			w !,cspapp," -> ",default
			Q:default=1
			
		} d rs.%Close() k rs
	s $namespace=ns
]]></Implementation>
</Method>

<Method name="SaveToFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>filePath:%String,body:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
		s fileM=##class(%Stream.FileBinary).%New()
		s fileM.Filename=filePath
		s st=fileM.Write(body)
		s st=fileM.%Save()
		k fileM
 		q $$$OK
]]></Implementation>
</Method>

<Method name="CreateCacheMethods">
<Description>
В случае наличия броекра - подтягивает и его</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>NameSpace,Package,location="C:\InterSystems\Cache\CSP"</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
		w !,"TEST",!
		s defaultPath = ""
		s ns = $namespace
		if location="C:\InterSystems\Cache\CSP" {
			s location = ..GetPath(..GetDefault(NameSpace)) //_Package
			}
			
		w !,"проект будет записан по пути "_location 
		Set LowName = $ZCVT(NameSpace,"L")
		#dim st as %Status=$$$OK
		
		#dim WebApp As %String= "web/"_LowName //"rest"_Package
		#dim Broker As %String= "broker/"_LowName
		//#dim BootStrapDir As %String="C:\temp\css\"
		//#dim AngularDir As %String="C:\temp\lib"
		#dim TemplPath As %String="C:\temp\templ"
		//#dim LNameSpace As %String=$ZCONVERT(NameSpace,"L")
		#dim jsPath = location_"\js\"
		#dim partPath = location_"\partials\"

		#dim ClassName,FullClassName,Property,XDATA,Controller,Factory,App,index,menu As %String=""
		#define t3 $C(10,9,9,9)
		#define t2 $C(10,9,9)
		#define t1 $C(10,9)
		#define div(%name) "<div class='"_%name_"'>"
		#define div2(%name,%body) $$$t1_"<div class='"_%name_"'>"_$$$t3_%body_$$$t2_"</div>"
		#define label(%name) $$$t3_"<label class='col-lg-4 control-label' for='"_%name_"'>"_%name_"</label>"
		#define inputform(%name,%prop) $$$div2("form-group",$$$label(%prop)_$$$div2("col-lg-8","<input type='text' id='Comment' class='form-control' ng-model='"_%name_"."_%prop_"' placeholder='"_%prop_"' >"))
		//w !,"***** NS-"_NameSpace," P-",Package," L-",location," jsP-",jsPath,"-"

		s File=##class(%File).%New()
		//s st=File.CreateDirectory(location_"\"_LNameSpace_"\css\"),st=File.%Save()
		//s st=File.CreateDirectory(location_"\"_LNameSpace_"\lib\"),st=File.%Save()
		s st=File.CopyDir(TemplPath,location,1,1)
		
		s st=File.%Save()
		w st
		//s st=File.CopyDir(BootStrapDir,location_"\"_LNameSpace_"\css\",1,1),st=File.%Save()
		//s st=File.CopyDir(AngularDir,location_"\"_LNameSpace_"\lib\",1,1),st=File.%Save()
		s st=File.CreateDirectory(jsPath),st=File.%Save()
		s st=File.CreateDirectory(partPath),st=File.%Save()
		k File
		
		S stream=##class(%FileCharacterStream).%New()
		S stream.Filename=TemplPath_"\index.html"
		//читаем весь файл
		s index="<!DOCTYPE html>"_$C(10)_"<html ng-app='"_Package_"'>"_$C(10)
		S index=index_stream.Read(stream.Size)
		d ..SaveToFile(location_"\index.html",index)
		
		s Factory="angular.module('FactoryModule',[])"
		s App="angular.module('"_Package_"',['ngCookies','ngResource','ngRoute','ngSanitize','ngAnimate','FactoryModule'"_$C(10)_
		"]).config(['$routeProvider',  function($routeProvider) { $routeProvider."
		s menu="<ul class='nav nav-pills nav-stacked'>"
		//#dim ClassList As %ArrayOfDataTypes
		s ClassList=##class(Template.Util).%SubClassList(NameSpace,Package),XDATA=$C(9)_"<Routes>"_$C(10)
		// надо ли?
		s temp=##class(%Stream.TmpCharacter).%New()
		f i=0:1:ClassList.Count()-1 {
			w !, "формируем контроллеры"
			s FullClassName=ClassList.GetAt(i)
			s ClassName=$P(ClassList.GetAt(i),".",2)
			s TempCreate=$C(9)_"set st=$$$OK"_$C(10,9)_"try{"_$C(10,9)_
			"$$$THROWONERROR(st,##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.obj,1))"_$C(10)_
 					$C(9)_"set "_ClassName_"=##class("_FullClassName_").%New()"_$C(10)
 					
 					s PropertyList=##class(Template.Util).%ListPropertiesOfClass(NameSpace,FullClassName)	
					s PartialCRUD=$$$div("well")_$$$t1_$$$div("row")_$$$t1_$$$div("col-lg-8")_
					$$$t2_"<form class='form-horizontal' ng-model='"_ClassName_"' ng-submit='Submit("_ClassName_")'>"
    					for key=1:1:PropertyList.Count()
    					 
    					{
	    				 s Property=PropertyList.GetAt(key)
 						 s TempCreate=TempCreate_$C(9)_"set "_ClassName_"."_Property_"=$ZCONVERT(obj."_Property_",""I"",""UTF8"")"_$C(10)
	    				 s PartialCRUD=PartialCRUD_$$$inputform(ClassName,Property)
 					     w !, "формируем модифицирующие партиции"			 
 						 }
 					s PartialCRUD=PartialCRUD_"<div class='form-group'>"_$$$t2_
			  		"<label class='col-lg-4 control-label'></label>"_$$$t2_
			    	"<div class='col-lg-8'>"_$$$t2_
			    	"<button type='submit' class='btn btn-success'>OK</button>"_$$$t2_
			    	"</div>"_$$$t2_
			    	"</div>"
 					s PartialCRUD=PartialCRUD_$$$t2_"</form>"_$$$t2_"</div>"_$$$t2_"</div>"_$$$t1_"</div>"	 
 					d ..SaveToFile(partPath_ClassName_".html",PartialCRUD)

 					s TempCreate=TempCreate_$C(9)_"$$$THROWONERROR(st,"_ClassName_".%Save())"_$C(10)_$C(9)_"} catch ex{set st=ex.AsStatus()}"_$C(10)_$C(9)_"quit st"
 			s st=temp.Write(TempCreate),TempCreate=""
 			s st=##class(Template.Class).%CreateMethod(NameSpace,FullClassName,"Create","","%Status",temp,"Create "_FullClassName), st=temp.Clear()
 			s TempUpdate=$C(9)_"set st=$$$OK"_$C(10)_$C(9)_"try{"_$C(10)_
 					$C(9)_"$$$THROWONERROR(st,##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.obj,1))"_$C(10)_
 					$C(9)_"set "_ClassName_"=##class("_FullClassName_").%OpenId(obj.ID)"_$C(10)
 					 s PropertyList=##class(Template.Util).%ListPropertiesOfClass(NameSpace,FullClassName)
					 s Partial="<div class='col-lg-10'>"_$$$t2_
                		"<input type='text' id='appendedInput'  ng-model='filterApp' placeholder='Search string'>"_$$$t2_
                		"<span class='add-on'><i class='icon-filter'></i></span>"_$C(10)_"</div>"_
					 	"<div class=''>"_$$$t1_
							"<a class='btn btn-success' href='#/Create"_ClassName_"'>Create "_ClassName_"</a>"_$$$t1_
							"<div class='row' ng-repeat='"_ClassName_" in "_ClassName_"s | filter:filterApp'>"_$$$t1_
							"<div class='col-lg-10'>" 
    					for key=1:1:PropertyList.Count()
    					 
    					{
	    				 s Property=PropertyList.GetAt(key)
    					 s TempUpdate=TempUpdate_$C(9)_"set "_ClassName_"."_Property_"=$ZCONVERT(obj."_Property_",""I"",""UTF8"")"_$C(10)
    					 w !, "формируем визуализирующие партиции"			 
						 s Partial=Partial_" {{"_ClassName_"."_Property_"}} </br>"
 						 }
 					s Partial=Partial_"</div>"_$$$t1_
							"<div class='col-lg-2'>"_$$$t1_
							"<button class='btn btn-default' ng-click='Delete("_ClassName_".ID)'><span class='glyphicon glyphicon-trash'></span></button>"_$$$t1_
							"<a class='btn btn-default' href='#/Update"_ClassName_"/{{"_ClassName_".ID}}'><span class='glyphicon glyphicon-refresh'></span></a>"_$$$t1_
							"</div></div></div>"	 
 						 d ..SaveToFile(partPath_"View"_ClassName_".html",Partial)
 			 		s TempUpdate=TempUpdate_$C(9)_"$$$THROWONERROR(st,"_ClassName_".%Save())"_$C(10)_$C(9)_"} catch ex{set st=ex.AsStatus()}"_$C(10)_$C(9)_"quit st"
 			s st=temp.Write(TempUpdate),TempUpdate=""
 			s st=##class(Template.Class).%CreateMethod(NameSpace,FullClassName,"Update","","%Status",temp,"Update "_FullClassName), st=temp.Clear()
 			s TempGet=$C(9)_"set sql=""select * from "_FullClassName_"  where ID=""_ID"_$C(10)_$C(9)_"do ##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL(,sql)"_$C(10)_$C(9)_"Q $$$OK"
 			s st=temp.Write(TempGet),TempGet=""
 			s st=##class(Template.Class).%CreateMethod(NameSpace,FullClassName,"Get","ID","%Status",temp,"Get "_FullClassName), st=temp.Clear()
 			s TempGetAll=$C(9)_"set sql=""select * from "_FullClassName_""""_$C(10)_$C(9)_"do ##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL(,sql)"_$C(10)_$C(9)_"Q $$$OK"
 			s st=temp.Write(TempGetAll),TempGetAll=""
 			s st=##class(Template.Class).%CreateMethod(NameSpace,FullClassName,"GetAll","","%Status",temp,"GetAll "_FullClassName), st=temp.Clear()
 			
 			s TempDelete=$C(9)_"Q ##class("_FullClassName_").%DeleteId(ID)"
 			s st=temp.Write(TempDelete),TempDelete=""
 			s st=##class(Template.Class).%CreateMethod(NameSpace,FullClassName,"Delete","ID","%Status",temp,"Delete "_FullClassName), st=temp.Clear()
			
			s XDATA=XDATA_$C(9)_$C(9)_"<Route Url=""/"_ClassName_"/Create"" Method=""POST"" 	Call="""_FullClassName_":Create""/>"_$C(10)_
			$C(9)_$C(9)_"<Route Url=""/"_ClassName_"/Update"" Method=""POST"" 	Call="""_FullClassName_":Update""/>"_$C(10)_
			$C(9)_$C(9)_"<Route Url=""/"_ClassName_"/GetAll"" Method=""GET"" 	Call="""_FullClassName_":GetAll""/>"_$C(10)_
			$C(9)_$C(9)_"<Route Url=""/"_ClassName_"/Get/:ID"" Method=""GET"" 	Call="""_FullClassName_":Get""/>"_$C(10)_
			$C(9)_$C(9)_"<Route Url=""/"_ClassName_"/Delete/:ID"" Method=""DELETE"" 	Call="""_FullClassName_":Delete""/>"_$C(10)
			d ##class(Template.Class).%Compile(NameSpace,FullClassName)
			w !,"*****"_$C(10)_FullClassName_$C(10)_"*******"
			
			s Factory=Factory_$$$t1_".factory('"_ClassName_"Factory',['$http',function($http){"_"return {"_$$$t2_
            "Create:function(data)   {return $http.post('/"_Broker_"/"_ClassName_"/Create',data);},"_$$$t2_
            "Update:function(data)   {return $http.post('/"_Broker_"/"_ClassName_"/Update',data);},"_$$$t2_
            "Delete:function(ID)   {return $http.delete('/"_Broker_"/"_ClassName_"/Delete/'+ID);},"_$$$t2_
            "Get:function(ID)      {return $http.get('/"_Broker_"/"_ClassName_"/Get/'+ID);},"_$$$t2_
            "GetAll:function()      {return $http.get('/"_Broker_"/"_ClassName_"/GetAll');}"_$$$t2_
            "}}])"
            
            s Controller=Controller_" function View"_ClassName_"Ctrl($rootScope,$scope,$routeParams,"_ClassName_"Factory){"_$$$t2_
    		"$scope.Get"_ClassName_"=function(){"_$$$t2_
            ""_ClassName_"Factory.GetAll().success(function(data){"_"$scope."_ClassName_"s=data.children;"_"});}; "_$$$t2_
			"$scope.Get"_ClassName_"();"_
			"$scope.Delete=function(ID){"_ClassName_"Factory.Delete(ID).success(function(){$scope.Get"_ClassName_"();})};"_$$$t1_
			"} "_$C(10)_
			
			" function Create"_ClassName_"Ctrl($rootScope,$scope,$routeParams,"_ClassName_"Factory){"_$$$t2_
			"$scope.Submit=function(data){ "_ClassName_"Factory.Create(data).success(function(){location.href='#/"_ClassName_"';}); }"_$$$t2_
			"} "_$C(10)_
			
			" function Update"_ClassName_"Ctrl($rootScope,$scope,$routeParams,"_ClassName_"Factory){"_$$$t2_
			"$scope.Submit=function(data){ "_ClassName_"Factory.Update(data).success(function(){location.href='#/"_ClassName_"';}); };"_$$$t2_
			"$scope.Get=function(){"_$$$t2_
			""_ClassName_"Factory.Get($routeParams.ID).success(function(data){"_"$scope."_ClassName_"=data.children[0];"_"});"_$$$t2_
			"}"_$$$t2_"$scope.Get();"_$$$t2_
			"} "_$C(10)
			
			s App=App_$C(10,9)_"when('/"_ClassName_"',{templateUrl: 'partials/View"_ClassName_".html', controller: View"_ClassName_"Ctrl})."_$C(10,9)
			_"when('/Create"_ClassName_"',{templateUrl: 'partials/"_ClassName_".html', controller: Create"_ClassName_"Ctrl})."_$C(10,9)
			_"when('/Update"_ClassName_"/:ID',{templateUrl: 'partials/"_ClassName_".html', controller: Update"_ClassName_"Ctrl})."_$C(10,9)
			
			s menu=menu_"<li><a href='#/"_ClassName_"'>"_ClassName_"</a></li>"_$C(10)
			
			
		}
		s App=App_"otherwise({redirectTo: '/"_ClassName_"'});}]);"_$C(10)
		s menu=menu_"</ul>"_$C(10)
		s XDATA=XDATA_$C(9)_"</Routes>"_$C(10),st=##class(Template.Class).%CreateClass(NameSpace,"WEB.Broker","%CSP.REST")
		s st= ##class(Template.Class).%Compile(NameSpace,"WEB.Broker"),st=temp.Write(XDATA) //, XDATA=""
		zn NameSpace
		s XD=##class(%Dictionary.XDataDefinition).%New("WEB.Broker"),XD.Name="UrlMap", st=XD.Data.Write(XDATA),st=XD.%Save()
		zn ..#%DefaultNameSpace

		s st= ##class(Template.Class).%Compile(NameSpace,"WEB.Broker"),st=temp.Clear()
  
 		d ..SaveToFile(jsPath_"controller.js",Controller)
		d ..SaveToFile(jsPath_"factory.js",Factory)
		d ..SaveToFile(jsPath_"app.js",App)
		d ..SaveToFile(partPath_"menu.html",menu)
		s $namespace=ns
		w !,"**********************************"
		w !,"проект доступен по адресу имя_сервера "_..GetDefault(NameSpace)_"/"_Package_"/index.html"
		w !,"необходимо связать брокер на адрес /"_WebApp
		w !,"задать Класс-обработчик 'WEB.Broker'"_$C(10)_"ВНИМАНИЕ!!! Регистр имеет значение!"
		w !,"**********************************"
		// todo: возвращать адреcc ??
		Q $$$OK
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// CreateCacheMethods

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// Class

]]></Content>
</UDLText>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Template.SpikeD</DataLocation>
<DefaultData>SpikeDefaultData</DefaultData>
<IdLocation>^Template.SpikeD</IdLocation>
<IndexLocation>^Template.SpikeI</IndexLocation>
<StreamLocation>^Template.SpikeS</StreamLocation>
<Data name="SpikeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
